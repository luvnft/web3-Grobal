import { ConsumeCouponModal, ParticipationModal } from 'components/modal';
import {
  TIME_ZONE,
  DATE_LOCAL_LANGUAGE,
  DATE_OPTION_DAY_TIME,
  DB_CONSUME_FLAG,
} from 'components/utils';
import Head from 'next/head';
import Image from 'next/image';
import { useRouter } from 'next/router';
import { API_RESPONSE } from 'pages/api/api-constants';
import { useState, useEffect } from 'react';
import { useWalletConnectClient } from '../components/contexts/ClientContext';

export default function Detail() {
  const { accounts, setAccounts } = useWalletConnectClient();

  const [index, setIndex] = useState(0);
  const [communityInfo, setCommunityInfo] = useState([]);
  const [participationInfo, setpPrticipationInfo] = useState([]);
  const [ticketInfo, setTicketInfo] = useState([]);
  const [openConsumeModal, setOpenConsumeModal] = useState(false);
  const [openParticipationModal, setOpenParticipationModal] = useState(false);
  const [usedAt, setUsedAt] = useState('');

  const router = useRouter();

  const handleClose = () => {
    setOpenConsumeModal(false);
    setOpenParticipationModal(false);
  };

  const getParticipation = async (communityId) => {
    try {
      // APIの実行
      const res = await fetch(`/api/community/getParticipation`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          walletAddress: accounts[0].toLowerCase(),
          communityId: communityId,
        }),
      });

      // API ステータスコードのチェック
      if (res.status != API_RESPONSE.OK.CODE) {
        alert('DBエラーが発生しました。1');
        return;
      }

      const resJson = await res.json();
      const participationItem = resJson.participationOutput?.Item; // item 単数形
      const ticketItem = resJson.ticketOutput?.Items; // items 複数形

      // DB データ取得件数のチェック
      if (typeof participationItem === 'undefined') {
        // DB検索結果が0件だった場合、undefinedとなる
        // 0件の場合もエラーではないので、returnするのみ
        setTicketInfo(ticketItem);
        return;
      }

      setpPrticipationInfo(participationItem);
      setTicketInfo(ticketItem);
    } catch (e) {
      console.log(e);
      alert('DBエラーが発生しました。');
    }
  };

  //　サイトアクセス時のデータ取得
  useEffect(() => {
    const lsSomeCommunityInfo = JSON.parse(
      sessionStorage.getItem('lsSomeCommunityInfo'),
    );
    const accounts = JSON.parse(sessionStorage.getItem('accounts'));
    if (accounts) {
      setAccounts(accounts);
    } else {
      setAccounts([]);
      sessionStorage.clear();
      router.push('/');
    }

    // MetaMaskでアカウントを変更した場合は処理を行わないようにするために分岐
    if (lsSomeCommunityInfo) {
      let queryString = window.location.search;
      const urlParams = new URLSearchParams(queryString);
      const index = urlParams.get('index');
      getParticipation(lsSomeCommunityInfo[index]?.communityId);
      setIndex(index);
      setCommunityInfo(lsSomeCommunityInfo[index]);
    }
  }, []);

  const checkTicket = () => {
    if (ticketInfo[0]?.status === DB_CONSUME_FLAG.NOT_CONSUMED) {
      setOpenParticipationModal(true);
    } else {
      alert('使用可能なコミュニティ参加券がありません。');
      return;
    }
  };

  // ページ表示
  return (
    <>
      {!communityInfo ? (
        <></>
      ) : (
        <div className={'mx-[20px] my-[24px] min-h-[calc(100vh)]'}>
          <Head>
            <title>COMMUNITY DETAIL</title>
            <meta name='description' content='Generated by create next app' />
            <link rel='icon' href='/favicon.ico' />
          </Head>

          <div className='flex flex-row justify-start items-center'>
            <Image
              src={`/new-design/backBtn.svg`}
              style={{ objectFit: 'obtain' }}
              width={45}
              height={45}
              onClick={() => router.push('/menu')}
              alt='back-btn'
            />
            <p className='text-[#4C4948] font-[700] text-[20px] break-words ml-[12px] leading-[calc(100%)]'>
              コミュニティ詳細
            </p>
          </div>

          <div
            className={
              'mt-[32px] p-[20px] w-[calc(100%)]  bg-white rounded-[10px] border-[6px] border-black/40'
            }
          >
            <div className='w-[calc(100%)]'>
              <img
                className='object-cover w-[calc(100%)] border-[2px] border-black/40'
                src={'/building.png'}
                alt='irodori'
              ></img>
            </div>

            <div className='flex flex-col items-center mt-[32px]'>
              <p className='text-[#4C4948] font-[700] text-[12px] leading-[calc(120%)]'>
                {communityInfo.building}
              </p>
              <p className='text-[#4C4948] font-[700] text-[18px] leading-[calc(120%)]'>
                {communityInfo.communityName}
              </p>
            </div>

            <div className='flex flex-col mt-[20px]'>
              <p className='text-[#4C4948] font-[400] text-[14px] leading-[calc(160%)] whitespace-pre-line'>
                {communityInfo.description}
              </p>
            </div>

            <div className='flex flex-col mt-[20px]'>
              <p className='text-[#4C4948] font-[400] text-[14px] leading-[calc(160%)]'>
                {`有効期限：${new Date(communityInfo.expire).toLocaleString(
                  DATE_LOCAL_LANGUAGE,
                  { timeZone: TIME_ZONE, ...DATE_OPTION_DAY_TIME },
                )}`}
              </p>
            </div>

            <div className="mt-[32px] bg- bg-repeat-x w-[calc(100%)] h-4 bg-[url('/new-design/dotline.png')]"></div>

            {communityInfo.capacity == communityInfo.participants ? (
              participationInfo.length < 1 ? (
                <div
                  className={
                    'mt-[20px] w-[calc(100%)] h-[56.5px] flex justify-center items-center'
                  }
                >
                  <div className='w-[calc(100%)] h-[45px] rounded-[4px] bg-[#22A9BC] flex justify-center space-x-[10px] items-center'>
                    <Image
                      src={`/new-design/ticketIcon.svg`}
                      style={{ objectFit: 'obtain' }}
                      width={22}
                      height={22}
                      alt='ticket-icon'
                    />
                    <p className='text-white font-[700] text-[14px]'>
                      {`募集終了（${communityInfo.participants}人 / ${communityInfo.capacity}人）`}
                    </p>
                  </div>
                </div>
              ) : participationInfo.status === DB_CONSUME_FLAG.NOT_CONSUMED ? (
                <>
                  <div className='flex flex-col items-center mt-[32px]'>
                    <p className='text-[#4C4948] font-[700] text-[12px] leading-[calc(120%)]'>
                      スタッフに提示しながら
                    </p>
                    <p className='text-[#4C4948] font-[700] text-[12px] leading-[calc(120%)]'>
                      押してください
                    </p>
                  </div>
                  <div
                    className={
                      'mt-[20px] w-[calc(100%)] h-[56.5px] flex justify-center items-center'
                    }
                  >
                    <div
                      className='w-[calc(100%)] h-[45px] rounded-[4px] bg-[#22A9BC] flex justify-center space-x-[10px] items-center'
                      onClick={() => setOpenConsumeModal(true)}
                    >
                      <Image
                        src={`/new-design/ticketIcon.svg`}
                        style={{ objectFit: 'obtain' }}
                        width={22}
                        height={22}
                        alt='ticket-icon'
                      />
                      <p className='text-white font-[700] text-[14px]'>
                        クーポンが利用可能
                      </p>
                    </div>
                  </div>
                </>
              ) : (
                <>
                  <div
                    className={
                      'mt-[20px] w-[calc(100%)] h-[56.5px] flex justify-center items-center'
                    }
                  >
                    <div className='w-[calc(100%)] h-[45px] rounded-[4px] bg-[#22A9BC]/60 flex justify-center space-x-[10px] items-center'>
                      <Image
                        src={`/new-design/ticketIcon.svg`}
                        style={{ objectFit: 'obtain' }}
                        width={22}
                        height={22}
                        alt='ticket-icon'
                      />
                      <p className='text-white font-[700] text-[14px]'>
                        クーポン使用済み
                      </p>
                    </div>
                  </div>
                </>
              )
            ) : participationInfo.length < 1 ? (
              <div
                className={
                  'mt-[20px] w-[calc(100%)] h-[56.5px] flex justify-center items-center'
                }
              >
                <div
                  className='w-[calc(100%)] h-[45px] rounded-[4px] bg-[#22A9BC] flex justify-center space-x-[10px] items-center'
                  onClick={checkTicket}
                >
                  <Image
                    src={`/new-design/ticketIcon.svg`}
                    style={{ objectFit: 'obtain' }}
                    width={22}
                    height={22}
                    alt='ticket-icon'
                  />
                  <p className='text-white font-[700] text-[14px]'>
                    コミュニティに参加
                  </p>
                </div>
              </div>
            ) : (
              <div
                className={
                  'mt-[20px] w-[calc(100%)] h-[56.5px] flex justify-center items-center'
                }
              >
                <div className='w-[calc(100%)] h-[45px] rounded-[4px] bg-[#22A9BC] flex justify-center space-x-[10px] items-center'>
                  <Image
                    src={`/new-design/ticketIcon.svg`}
                    style={{ objectFit: 'obtain' }}
                    width={22}
                    height={22}
                    alt='ticket-icon'
                  />
                  <p className='text-white font-[700] text-[14px]'>
                    {`参加済み（${communityInfo.participants}人 / ${communityInfo.capacity}人）`}
                  </p>
                </div>
              </div>
            )}

            <div className='flex flex-col mt-[20px]'>
              <p className='mt-[10px] text-[#4C4948] font-[400] text-[10px] leading-[calc(160%)]'>
                ※クーポンの使用はお一人様につき一度限りとなります。
                <br />
                ※ノベルティの数量に限りがございますので、無くなり次第、配布を終了とさせていただきます。
                <br />
              </p>
            </div>
          </div>

          <ConsumeCouponModal
            open={openConsumeModal}
            handleClose={handleClose}
            walletAddress={accounts[0]}
            item={communityInfo}
            setUsedAt={setUsedAt}
          ></ConsumeCouponModal>
          <ParticipationModal
            open={openParticipationModal}
            handleClose={handleClose}
            walletAddress={accounts[0]}
            item={communityInfo}
            ticketInfo={ticketInfo}
          ></ParticipationModal>
          <div className={`fixed top-0 left-0 w-full h-screen z-[-1]`}>
            <Image
              src={`/background.png`}
              layout={`fill`}
              objectFit={`cover`}
              alt='back-image'
            />
          </div>
        </div>
      )}
    </>
  );
}
